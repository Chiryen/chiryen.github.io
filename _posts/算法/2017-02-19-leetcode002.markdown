---
layout: post
title:  "Add Two Numbers--leetcode002"
categories: 算法
---

You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)  
Output: 7 -> 0 -> 8

[Add Two Numbers](https://leetcode.com/problems/add-two-numbers/?tab=Description)

	class ListNode(object):
	    def __init__(self, x):
	        self.val = x
	        self.next = None
	
	class Solution(object):
	    def addTwoNumbers(self, l1, l2):
	        """
	        :type l1: ListNode
	        :type l2: ListNode
	        :rtype: ListNode
	        """
	        carry = 0
	        head = p = ListNode(0)
	        while l1 or l2 or carry:
	            v1 = v2 = 0
	            if l1:
	                v1 = l1.val
	                l1 = l1.next
	            if l2:
	                v2 = l2.val
	                l2 = l2.next
	            carry, value = divmod(v1 + v2 + carry, 10)
	            p.next = p = ListNode(value)
	        return head.next


代码是参照网上的大神写的，其中第24行的p.next = p = ListNode(value)，一开始表示很奇怪，stackoverflow上有人说python的这种赋值顺序和大多数语言不一样  
p.next = ListNode(value), 然后p指向相同的地址

	temporary_expr_result = ListNode(value)
	a = temporary_expr_result
	b = temporary_expr_result
